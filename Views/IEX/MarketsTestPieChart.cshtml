@{
    ViewData["Title"] = "Markets Test";
}

<script src="https://unpkg.com/babel-polyfill@6.26.0/dist/polyfill.js"></script>
<script src="https://unpkg.com/custom-event-polyfill@0.3.0/custom-event-polyfill.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/document-register-element/1.8.0/document-register-element.js"></script>
<!-- use babel so that we can use arrow functions and other goodness in this block! -->
<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
<script src="https://unpkg.com/d3@5.5.0"></script>
<script src="https://unpkg.com/d3fc@14.0.3"></script>

<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>


<input type="hidden" id="customInput1" data-value = "@ViewBag.Markets" />

<div class="text-center">
    <h1 class="display-4">Markets Pie Chart Test</h1>
</div>
<br>

<style>

</style>

<script>

var list1 = $("#customInput1").data("value");
var myBlob1 = URL.createObjectURL(new Blob([list1], {type : "text/csv"}));

// Data
var data = [{"letter":"q","presses":1},{"letter":"w","presses":5},{"letter":"e","presses":2}];
console.log(data);

// Variables for Pie Chart
var width = 300, 
    height = 300,
    radius = Math.min(width, height) / 2;

// Color Scheme
var color = d3.scaleOrdinal()
	.range(["#2C93E8","#838690","#F56C4E"]);

// Setting up the piechart
var pie = d3.pie()
	.value(function(d) { return d.presses; })(data);

// Chart Arc
var arc = d3.arc()
	.outerRadius(radius - 10)
	.innerRadius(0);

// Label Arc
var labelArc = d3.arc()
	.outerRadius(radius - 40)
  .innerRadius(radius - 40);
  
// Attach to pie div, add attributes and put the char in the center
var svg = d3.select("#pie")
.append("svg")
.attr("width", width)
.attr("height", height)
  .append("g")
  .attr("transform", "translate(" + width/2 + "," + height/2 +")"); // Moving the center point. 1/2 the width and 1/2 the height

//  join the data generated by .pie()
var g = svg.selectAll("arc")
	.data(pie)
	.enter().append("g")
  .attr("class", "arc");
  
// append the paths created by the .arc() functions with the variables we defined above. Weâ€™re using the color variable we defined above to get the colors we want for the various arc
g.append("path")
	.attr("d", arc)
  .style("fill", function(d) { return color(d.data.letter);});
  
g.append("text")
	.attr("transform", function(d) { return "translate(" + labelArc.centroid(d) + ")"; })
	.text(function(d) { return d.data.letter;})
  .style("fill", "#fff");
  

</script>

<div id="pie"></div>